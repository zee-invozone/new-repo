# GitLab CI/CD Pipeline Configuration
stages:
  - test
  - build
  - security
  - deploy

variables:
  NODE_VERSION: "18"
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

# Cache dependencies between jobs
cache:
  paths:
    - node_modules/
    - .npm/

# Test stage
test:
  stage: test
  image: node:${NODE_VERSION}-alpine
  before_script:
    - npm ci
  script:
    - npm run lint
    - npm test
    - npm run build
  coverage: '/All files[^|]*\|[^|]*\|[^|]*\|[^|]*\s+(\d+)/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml
    paths:
      - dist/
      - coverage/
    expire_in: 1 week
  only:
    - main
    - develop
    - merge_requests

# Build stage
build:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker build -t $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - main
    - develop

# Security scan
security_scan:
  stage: security
  image: node:${NODE_VERSION}-alpine
  before_script:
    - npm ci
  script:
    - npm audit --audit-level=moderate
    - npx snyk test --severity-threshold=high
  allow_failure: true
  only:
    - main
    - develop
    - merge_requests

# Deploy to staging
deploy_staging:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache curl
  script:
    - echo "Deploying to staging environment..."
    - echo "Build: $CI_COMMIT_SHA"
    - echo "Branch: $CI_COMMIT_REF_NAME"
    # Add your staging deployment commands here
    # Example: curl -X POST $STAGING_WEBHOOK_URL
  environment:
    name: staging
    url: https://staging.example.com
  only:
    - develop

# Deploy to production
deploy_production:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache curl
  script:
    - echo "Deploying to production environment..."
    - echo "Build: $CI_COMMIT_SHA"
    - echo "Branch: $CI_COMMIT_REF_NAME"
    # Add your production deployment commands here
    # Example: curl -X POST $PRODUCTION_WEBHOOK_URL
  environment:
    name: production
    url: https://production.example.com
  when: manual
  only:
    - main
